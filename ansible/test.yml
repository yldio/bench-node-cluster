
- name: Start single-server service
  service: state=restarted name=server-single args="PORT=6000"

- name: Bench single
  shell: "/root/wrk2/wrk -t{{ threads }} -c{{ connections }} -d{{ time }} -R{{ throughput }} http://127.0.0.1:6000/ > /root/single.txt"

- name: Download single test result
  fetch: fail_on_missing=yes flat=yes src=/root/single.txt dest=../results/single.txt

- name: Stop single-server service
  shell: service server-single stop PORT=6000

- name: Start server-cluster service
  service: state=restarted name=server-cluster

- name: Bench cluster
  shell: "/root/wrk2/wrk -t{{ threads }} -c{{ connections }} -d{{ time }} -R{{ throughput }} http://127.0.0.1:7000/ > /root/cluster.txt"

- name: Download cluster test result
  fetch: fail_on_missing=yes flat=yes src=/root/cluster.txt dest=../results/cluster.txt

- name: Stop server-cluster service
  shell: service server-cluster stop

- name: Start services
  service: state=restarted name=server-single args="PORT={{ item }}"
  with_items: [ 8001, 8002, 8003, 8004 ]
  tags: [ nginx, haproxy ]

- name: Start nginx service
  service: name=nginx state=started
  tags: nginx

- name: Bench nginx
  shell: "/root/wrk2/wrk -t{{ threads }} -c{{ connections }} -d{{ time }} -R{{ throughput }} http://127.0.0.1:1337/ > /root/nginx.txt"
  tags: nginx

- name: Download nginx test result
  fetch: fail_on_missing=yes flat=yes src=/root/nginx.txt dest=../results/nginx.txt
  tags: nginx

- name: Stop nginx service
  service: name=nginx state=stopped
  tags: nginx

- name: Start haproxy service
  service: name=haproxy state=started
  tags: haproxy

- name: Bench haproxy
  shell: "/root/wrk2/wrk -t{{ threads }} -c{{ connections }} -d{{ time }} -R{{ throughput }} http://127.0.0.1:9000/ > /root/haproxy.txt"
  tags: haproxy

- name: Download haproxy test result
  fetch: fail_on_missing=yes flat=yes src=/root/haproxy.txt dest=../results/haproxy.txt
  tags: haproxy

- name: Stop haproxy service
  service: name=haproxy state=stopped
  tags: haproxy

- name: Stop server services
  shell: service server-single stop PORT={{ item }}
  with_items: [ 8001, 8002, 8003, 8004 ]
  tags: [ nginx, haproxy ]


